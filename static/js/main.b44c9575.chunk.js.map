{"version":3,"sources":["Data/posts.js","Redux/reducer.js","Components/Photo.js","Components/Photowall.js","Components/NewPhoto.js","Components/comment.js","Components/single.js","Components/Main.js","database/config.js","Redux/actions.js","Components/App.js","index.js"],"names":["posts","rootReducer","combineReducers","comments","state","action","type","postId","comment","Posts","slice","index","post","Photo","props","className","to","id","src","imageLink","alt","description","onClick","startRemovingPost","history","push","prototype","proptypes","object","isRequired","Photowall","sort","x","y","map","key","AddPhoto","SubmitPost","bind","event","preventDefault","target","elements","link","value","Number","Date","this","startAddingPost","onHistory","window","alert","onSubmit","placeholder","name","Component","Comments","handleSubmit","startAddingComments","hidden","Single","match","params","find","findIndex","loading","Main","startLoadingPost","then","setState","startLoadingComments","exact","path","render","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","dispatch","ref","update","addPost","catch","error","console","log","once","snapshot","forEach","childSnapshot","val","loadPost","remove","removePost","addComment","Object","values","loadComments","App","withRouter","connect","bindActionCreators","actions","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunk","ReactDom","document","getElementById"],"mappings":"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","file":"static/js/main.b44c9575.chunk.js","sourcesContent":["const posts = []\n\nexport default posts","import posts from '../Data/posts'\nimport {combineReducers} from 'redux';\n\nfunction comments(state={} , action){\n    switch(action.type){\n        case 'add_comment': \n        if (!state[action.postId]){\n        return {...state , [action.postId]:[action.comment]}\n        }else{\n            return {...state, [action.postId]:[...state[action.postId] , action.comment]}\n        }\n        case 'load_comment' : return action.comments\n        \n        default: return state\n    }\n    \n}\n\nfunction Posts(state=posts , action){\n    \n    switch(action.type){\n        case 'remove_Post': return [...state.slice(0 , action.index) , ...state.slice(action.index + 1)]\n        case 'add_post': return [...state , action.post]\n        case 'Load_Post' : return action.posts\n        default : return state\n    }\n}\n\nconst rootReducer = combineReducers({comments , Posts});\n\nexport default rootReducer","import React from 'react'; \nimport proptypes from 'prop-types';\nimport {Link} from 'react-router-dom';\n\nfunction Photo(props)\n   {\n     const post = props.post;\n         return   <figure className=\"figure\"> \n                    <Link to={`/single/${post.id}`}><img  className=\"photo\" src={post.imageLink} alt={post.description} /></Link>\n                         <figcaption> <p> {post.description} </p> </figcaption>\n                     <div className=\"button-container\"> \n                         <button className=\"remove\" onClick = { () => {\n                        props.startRemovingPost(props.index ,post.id);\n                      props.history.push('/')\n                   }}>Remove</button>\n                     </div>\n                  </figure>\n\n}\n\n//props below should be same as those defined in the photowall.js \n        Photo.prototype = {\n                        post: proptypes.object.isRequired  ,\n             }\n\nexport default Photo","import React from 'react';               // make sure to add {Component} if you are using class instead of function\nimport Photo from './Photo';\nimport propTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\n\nfunction Photowall(props){\n\n            return  <div>\n                    <Link className=\"Add\" to=\"/addPhoto\"> ADD </Link>\n                     <div className=\"photoGrid\">\n                     {props.posts\n                    .sort(function(x,y){\n                        return  y.id - x.id\n                    })\n                       .map((post , index) => <Photo key={index} post={post} {...props} index={index}/>)}\n                    </div>\n                </div>\n                }\n\n//make sure that the names of props here and in the main.js inside render method are same\n\nPhotowall.propTypes = {\n            posts :  propTypes.array.isRequired ,//make sure that props of type post is in the form of array that is required always\n\n               }\n\nexport default Photowall","import React , {Component} from 'react';\n\n\nclass AddPhoto extends Component {\n     constructor(){\n          super();\n          this.SubmitPost = this.SubmitPost.bind(this);\n     }\n     \n     SubmitPost(event){\n          event.preventDefault();\n          const imageLink = event.target.elements.link.value;\n          const description = event.target.elements.description.value;\n          const post = {\n               id:Number(new Date()) ,\n               description: description,\n               imageLink: imageLink\n          }\n          if(description && imageLink){\n               this.props.startAddingPost(post);\n               this.props.onHistory.push('/');\n          }\n          else if(!description && !imageLink){\n               window.alert(\"please provide a link and a description\");\n          }\n          else if(description){\n               window.alert(\"please provide a valid link to an image.\")\n          }\n          else{\n               window.alert(\"please give a relatable description for your image.\")\n          }\n     }\n\n\n\n     render(){\n       \n                return ( <div>\n                       <form className=\"form\" onSubmit={this.SubmitPost}>\n                            <input type=\"text\"  placeholder=\"Link\" name=\"link\"/>\n                            <input type=\"text\"  placeholder=\"Description\" name=\"description\"/>\n                           <button>Post</button>\n                      </form>\n                      </div>\n                )} \n    }\n\nexport default AddPhoto","import React , {Component} from 'react'\n\nclass Comments extends Component{\n    constructor(){\n        super();\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleSubmit(event){\n        event.preventDefault();\n        const comment =  event.target.elements.comment.value;\n        this.props.startAddingComments(comment , this.props.id);\n        event.target.elements.comment.value = '';\n\n    }\n\n    render(){\n        // console.log(this.props.comments);\n        return <div className=\"comment\">\n            {\n            \n                this.props.comments.map((comment , index) => {\n                    return (\n                        <p key={index}> {comment}</p>\n                    )\n                })\n            }\n                   <form className=\"comment-form\" onSubmit={this.handleSubmit}>\n                      <input type=\"text\" placeholder=\"comment\" name=\"comment\"/> \n                      <input type=\"submit\" hidden/> \n                  </form>\n        </div>\n\n    }\n}\n\nexport default Comments","import React, {Component} from 'react'\nimport Photo from './Photo';\nimport Comments from './comment';\n\n\nclass Single extends Component{\n    render(){\n        const {match , posts} = this.props;\n        const id = Number(match.params.id);\n        const post = posts.find((post) => post.id === id);\n        const comments = this.props.comments[match.params.id] || [];\n        const index = this.props.posts.findIndex((post) => post.id === id);\n        // console.log(post);\n        if(this.props.loading === true ){\n            return <div className=\"loader\"> loading...</div>\n        }else if(post){\n        return <div className=\"single-photo\">\n            <Photo post={post} {...this.props} index={index}/>\n            <Comments startAddingComments ={this.props.startAddingComments } comments={comments} id={id}/> \n          </div>\n        }else{\n            return <h1>No Post Found...</h1>\n        }\n    }\n\n}\n\nexport default Single","import React , {Component} from 'react';\nimport Photowall from './Photowall';\nimport AddPhoto from './NewPhoto'\nimport {Route, Link} from 'react-router-dom';\n// import {removePost} from '../Redux/actions';\nimport Single from './single';\n\nclass Main extends Component {\n\n  state = {loading : true }\n \ncomponentDidMount(){\n  this.props.startLoadingPost().then(() => {\n    this.setState({loading : false})\n  })\n  this.props.startLoadingComments()\n}\n\n  render(){ \n    // console.log(this.props);\n              return (\n                  <div>\n                    <h1><Link to=\"/\">Photowall</Link></h1>\n                    <Route exact path = \"/\" render = {() => (\n                      <div>\n                        <Photowall {...this.props}/>\n                  </div>\n            )}/>\n\n             <Route path=\"/addPhoto\" render = {({history}) => (\n                   <AddPhoto {...this.props} onHistory={history}/>\n            )}/>\n\n            <Route exact path=\"/single/:id\" render = {(params) => (\n                <Single loading={this.state.loading} {...this.props} {...params} />\n            )}/>\n        </div>\n      )\n    }              \n  }\n\nexport default Main","import * as firebase from 'firebase';\n\n//using CDN\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDlOPAWWtrB1vWg17d3uPWjLxRleh9oCDA\",\n  authDomain: \"thephotowallapp.firebaseapp.com\",\n  databaseURL: \"https://thephotowallapp.firebaseio.com\",\n  projectId: \"thephotowallapp\",\n  storageBucket: \"thephotowallapp.appspot.com\",\n  messagingSenderId: \"582655079973\",\n  appId: \"1:582655079973:web:e352f12f39739701a171cc\",\n  measurementId: \"G-754C3MRNWZ\"\n};\n\nfirebase.initializeApp(firebaseConfig)\n\nconst database = firebase.database()\n\nexport {database}","import {database} from '../database/config';\n export function startAddingPost(post){\n     return (dispatch) => {\n         return database.ref('posts').update({[post.id]: post}).then(() => {\n             dispatch(addPost(post))\n         }).catch((error) => {\n            console.log(error)\n        })\n     }\n }\n\n export function startLoadingPost(){\n     return (dispatch) => {\n         return database.ref('posts').once('value').then((snapshot) => {\n             let posts = [];\n             snapshot.forEach((childSnapshot) => {\n                 posts.push(childSnapshot.val());\n             })\n             dispatch(loadPost(posts));\n         }).catch((error) => {\n            console.log(error)\n        })\n     }\n }\n\n export function  startRemovingPost(index , id){\n       return (dispatch) => {\n           return database.ref(`posts/${id}`).remove().then(() => {\n               dispatch(removePost(index));\n           }).catch((error) => {\n            console.log(error)\n        })\n       }\n }\n\n export function startAddingComments(comment , postId){\n     return (dispatch) => {\n         return database.ref(`comments/ ${postId}`).push(comment).then(() => {\n             dispatch(addComment(comment ,postId));\n         }).catch((error) => {\n            console.log(error)\n        })\n     }\n\n }\n\n export function startLoadingComments() {\n    return (dispatch) => {\n        return database.ref('comments').once('value').then((snapshot) => {\n            let comments = {}\n            snapshot.forEach((childSnapshot) => {\n                comments[childSnapshot.key] = Object.values(childSnapshot.val())\n            })\n            dispatch(loadComments(comments))\n        })\n    }\n}\n\n\nexport function removePost(index){\n    return{\n        type : 'remove_Post',\n        index:index\n    }\n\n}\n\n//Add Post\n\nexport function addPost(post){\n    return{\n        type : 'add_post',\n        post : post\n    }\n}\n\n//Add Comment\n\nexport function addComment(comment ,postId){\n    return{\n        type : 'add_comment' ,\n        comment: comment,\n        postId:postId\n    }\n}\n\nexport function loadPost(posts){\n    return {\n        type : 'Load_Post',\n        posts\n    }\n}\n\nexport function loadComments(comments){\n    return {\n        type : 'load_comment',\n        comments\n    }\n}","import Main from './Main';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as actions from '../Redux/actions';\nimport {withRouter} from 'react-router';\n\nfunction mapStateToProps(state)\n    {\n        return {\n                 posts: state.Posts ,\n                 comments: state.comments\n\n             }\n    }\n\nfunction mapDispatchToProps(dispatch){\n    return bindActionCreators(actions , dispatch);\n\n}    \n\nconst App = withRouter(connect(mapStateToProps , mapDispatchToProps)(Main))\n\nexport default App","import React from 'react';\nimport ReactDom from 'react-dom';\nimport './style/style.css';\nimport {HashRouter} from 'react-router-dom';\nimport {createStore ,applyMiddleware} from 'redux';\nimport rootReducer from './Redux/reducer';\nimport {Provider} from 'react-redux';\nimport App from './Components/App';\nimport thunk from 'redux-thunk';\nimport {database} from './database/config'\n\nconst store = createStore(rootReducer , window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(), applyMiddleware(thunk))\n\n\n//whenever the instance of main class is called its constructor will automatically be called\n\nReactDom.render(<Provider store={store}><HashRouter><App/></HashRouter></Provider> , document.getElementById('root'));\n"],"sourceRoot":""}